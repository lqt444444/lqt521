[{"title":"汉代的经济制度","path":"/2024/07/11/学习3/","content":"赋税制度上面讲的是政府之形成，及其职权分配之内容。下面要讲到支持政府的主要经济问题，即赋税制度。 汉代对于“轻徭薄赋”这一理想算是做到了。战国时孟子讲过“什一而税”是王者之政，可见战国税额是不止什一的，在孟子以为什一之税已是很好了。可是汉代税额规定就只有十五税一。而且实际上只要纳一半，三十税一。一百石谷子，只要纳三石多一点的税。甚至当时人还说有“百一之税”的。（见荀悦《前汉纪》。）并在文帝时，曾全部免收田租，前后历十一年之久。这是中国历史上仅有的一次。这因中国疆土广，户籍盛，赋税尽轻，供养一个政府，还是用不完。 然而汉代税制，有一个大毛病。当时对于土地政策，比较是采用自由主义的。封建时代的井田制早已废弃，耕者有其田，土地的所有权属于农民私有；他可自由使用，也可自由出卖。遇到经济困乏，田地可以买卖，就形成了兼并。若我们进一步问：为什么政府税额轻了，农民还要卖去自己的田地呢？这当然还有其他原因。这须讲到当时的人口税、兵役税，乃及社会经济之全体貌。此刻无暇涉及。但耕户卖去了他的土地所有权以后，他就变成一佃农。田主对佃农的租额是很高的。有的高到百分之五十，即十分之五。结果政府的租税愈轻，地主愈便宜；农民卖了地，要纳十分之五的租给地主，地主向政府只要纳三十分之一的税。政府减轻田租，只便宜了地主，农民没有受到分毫的好处。这是讲的田租。 但这里已牵涉到土地所有权问题。封建时代，“四封之内，莫非王土；食土之毛，莫非王臣。”土地为封建贵族所专有，耕田者依时还受；这是井田制度一项主要的条件。现在封建破坏，土地归民间私有。既属私有，自可自由买卖。政府只管按田收税，不管田地谁属。卖田的和买田的，双方共同成立一种契约。这纯是民间经济贸易关系。所以在自由买卖下的大地主，并不即是封建贵族。封建是政治性的，而此刻的地主，则由经济条件而形成。他可以自由买进，也可以自由卖出。正因为土地私有，耕者有其田，才有了自由买卖；才开始有兼并；才使贫者无立锥之地。以后中国历史上的土地政策，一面常歆羡古代井田制度之土地平均占有，但一面又主张耕者有其田，承认耕地应归属民间之私产。在这两观念之冲突下，终使土地租税问题得不到一个妥适的解决。 再说全国土地，也并非全属耕地。则试问非耕地的主权，又是谁的呢？一座山，一带树林，一个大的湖，在封建时代，自然是“四封之内，莫非王土”，耕地、非耕地同样该属于贵族。耕地开放了，散给农民，平均分配，成为井田；而非耕地则成为不公开的禁地。山林池泽，贵族另派管理员如虞人之类去看守。后来情势变了，耕地所有权逐渐转移到农夫手里，而非耕地的禁区呢？也渐渐被民间私下闯入，烧炭伐木，捕鱼猎兽。这是一种违法的牟利。这一些时时闯入禁区的，在当时被目为盗贼；而他们这种耕地以外的生产，则称之为“奸利”。政府设官防止，有权征讨。待后防不胜防，讨不胜讨，索性把禁地即山林池泽也逐渐开放了。只在出入关隘，设一征收员，遇在禁区捕鱼伐木的，只就其所获，征收其所获几分之几的实物。这就在田租之外，另成一种赋税。这是关税、商税之缘起。所以称之曰“征”者，原先是征伐禁止的，后来只以分享获得为妥协条件，而仍以“征”字目之。这一种转变，春秋末年，已在大大开始。土地狭或是人口密的国家，如郑，如晋，如齐，都有此现象，都有此措施。然直到秦汉统一政府出现，关于土地所有权的观念却依然承袭旧贯。他们认耕地为农民私有，而非耕地即封建时代相传之禁地则仍为公家所有。换言之，即成为王室所有。此因封建贵族都已消失，只剩皇帝一家，承袭旧来的封建传统；所以全国的山林池泽，照当时人观念，便全归皇室。再从这一所有权的观念影响到赋税制度，所以当时凡农田租入归诸大司农，充当政府公费；而山海池泽之税则属少府，专供皇帝私用。这一分别，若非从封建时代之井田制度以及其他土地所有权之分别转变说来，便不易明了。 现在再说，此一公私分税的制度，在开始时也颇合理。因耕地多，田赋是大宗；而山林池泽的商税只占少数。把大宗归国家，小数拨归皇室，这也并非皇帝私心自肥。但战国以下，盐铁之利逐渐澎大起来。社会经济情形变了，山海池泽之税逐步超过了全国的田租。这一转变，是开始定制时所不曾预料的。正如清代末年，并不知商埠对外通商关税之逐年增添，却把此事让给外国人去管，后来遂吃了大亏。清代如此，汉代亦复如是。商税渐渐的超过了田租，于是少府收入，反而胜过了大司农。汉武帝是一个雄才大略的皇帝，讨匈奴，通西域，军费浩繁，大司农的钱用完了，连他父亲（景帝）、祖父（文帝）几辈子积蓄下来的财富都花光了。政府支出庞大，陷入窘地，这又怎样办呢？农民的田租，三十分之一的定额，制度定了，又不便轻易再变更，再增加。汉武帝就只有自己慷慨，把少府的金钱拿出来。这等于是把皇室私款来捐献给政府。所以武帝同时也命令地方上有钱的人，最主要的如盐铁商人等，也能如他般大家自由乐捐。结果社会响应不佳，拥有大资产的，不理会政府之号召。汉武帝不禁要想：你们的钱究竟由那里来的呢？岂不是都由我把山海池泽让给你们经营，你们才能煮盐冶铁，发财赚钱。现在我把少府收入都捐献给国家，而你们不响应；那么我只有把全国的山海池泽一切非耕地收还，由我让给政府来经营吧！这便是汉武帝时代有名的所谓“盐铁政策”。 盐铁商是当时最大最易发财的两种商业。 盐没有一人不吃的，铁也没有一家不用；而煮海成盐，开山出铁，这山与海的主权，却在皇帝手里。现在汉武帝再不让商人们擅自经营了，把其所有权收回，让政府派官吏去自己烧盐，自己冶铁 ，其利息收入则全部归给政府。于是盐铁就变成国营与官卖。 这个制度，很像近代西方德国人所首先创始的所谓“国家社会主义”的政策。可是我们远在汉代已经发明了这样的制度。直到清代，小节上的变化虽然有，而大体上总还遵循这一政策，总还不离于近代之所谓国家社会主义的路线。这一制度，也不专限于盐铁两项。又如酒，这是消耗着人生日用必需的米麦来做成的一种奢侈享乐品，因此也归入官卖，不许民间自由酿造。 这些制度的后面，自然必有其理论的根据。我们要讲中国的经济思想史，必须注意到历史上种种实际制度之措施。 而讲中国经济制度，却又该注意此项制度之所由演变完成的一种历史真相。所以我讲汉武帝时代的盐铁政策，却远远从古代井田制度与山泽禁地之在法理上所有权之区分，直讲到少府与大司农的税收之分配于政府与皇室之由来，而由此再引伸出盐铁官卖来。这并不专是一个思想与理论的问题，而实际上则有极占重要的历史传统之现实情况来决定。为了这一问题，在当时也争辩得很久，到汉昭帝时还有一番热烈的讨论，全国各地民众代表，和政府的财政主管大臣，在特别召集的会议席上往返辩论，互相诘难。有当时一位民众代表事后留下一份纪录，就是有名的《盐铁论》。当然民间主张开放，政府主张国营。而当时实际上的利弊得失，则非熟究当时人的意见，是无法悬揣的。我们此刻要讨论历史制度，全该注意当时的历史传统与当时人的历史意见，作为主要之参考。不该把我们的时代意见来抹杀当时的历史意见。这才是正办呀！ 我们概括上述汉代的经济政策，对工商业，是近于主张如近人所谓的“节制资本”的一面；而在对农民田租方面，则也已做到了“轻徭薄赋”，但并未能“平均地权”。 在汉武帝时，董仲舒曾主张限田政策，纵不能将全国田亩平均分派，也须有一最高限度，使每一地主不能超过若干亩之限制。惜乎连这个政策也并未能推行。于是王莽起来，就激起了一项大改革，把一切田亩归国有，称为“皇田”，重行分配。当时的意想，实在要恢复封建时代之井田制，而结果则引生一次大变乱。王莽失败了，从此中国历史上的土地制度也不再有彻底的改革了。","tags":["学习","历史"]},{"title":"学习5","path":"/2024/07/07/学习5/","content":"大众心理学群众心理学发现，个体在集体中容易丧失责任感，行为会出现趋同，而且这种现象随着群体的增大会更加明显。 群体只有很普通的品质。 群体只有很普通的智慧。 群体也只有最基本的智能。 群体同时也只具有最低甚至更低层次的智力。 群体会让人们丧失责任感单独一个人必须要为他的行为承担责任——法律上的和道德上的。 但是群体则不然，群体不需要承担任何责任，群体就是法律，群体就是道德，群体的行为天然就是合理的。于是，曾经牢固的约束于一个人的责任感就会荡然无存，而群体得到的，是最为原始的本能表达与宣泄。 群体的情绪会传染 在群体中，任何一种感情和行动——只要这种感情与行动不合常理——都会很容易传染开来，其程度之强，足以让一个人随时准备为另一个与他毫不相干的人做出牺牲。 群体只接受暗示力量的影响。 心理学家为我们提供了更为细致的心理观察——他们指出，长时间融入群体行动的个人，尽管他看起来并没什么根本性的变化，但随着时日的推移，不久他就表现为——或者是在群体发挥催眠力量的有效影响之下，或者是由于另外一些我们或许永远也无法弄清楚的原因——他让自己进入了一种特殊的存在状态。 就像催眠师在患者面前晃动水晶球，群体中的个人从此陷入了一种极度兴奋的无意识状态。 大脑的知性活动被抑制、正常的思维活动被麻痹——这时候的人完全听命于他的脊椎神经所接收到的外部信号。 他沦为了受催眠师随意支配的一切无意识活动的奴隶！ 总结一下 群体中的个人行为表现具有如下四个特点： 第一，是自我人格消失； 第二，是无意识人格起到决定性的作用； 第三，是情感与思想在暗示与传染的作用下转向一个方向； 第四，是暗示的观念具有即刻转化为行动的冲动。","tags":["学习"]},{"title":"学习3","path":"/2024/07/06/学习3-1/","content":"之前一直装逼，没咋学，现在从头学 1. for循环for循环通常用于当你知道循环执行的次数时。 语法java 复制代码 for (初始化; 条件; 更新) &#123; // 循环体 &#125; 初始化：在循环开始时执行，只执行一次，通常用于声明和初始化控制变量。 条件：在每次循环迭代开始前进行评估。如果条件为true，则执行循环体；如果为false，则退出循环。 更新：每次循环迭代结束后执行，通常用于更新控制变量。 2. while循环while循环用于当你不确定循环执行次数时，循环会一直执行直到条件为假。 语法java 复制代码 while (条件) &#123; // 循环体 &#125; 条件：在每次循环迭代开始前进行评估。如果条件为true，则执行循环体；如果为false，则退出循环。 示例java 复制代码 public class WhileLoopExample &#123; public static void main(String[] args) &#123; int i = 0; while (i &lt; 5) &#123; System.out.println(&quot;i is &quot; + i); i++; &#125; &#125; &#125; 3. do-while循环do-while循环与while循环类似，但不同的是，do-while循环至少会执行一次，因为条件判断在循环体之后。 语法java 复制代码 do &#123; // 循环体 &#125; while (条件); 循环体：先执行一次。 条件：在每次循环迭代结束后进行评估。如果条件为true，则继续执行循环；如果为false，则退出循环。 示例java 复制代码 public class DoWhileLoopExample &#123; public static void main(String[] args) &#123; int i = 0; do &#123; System.out.println(&quot;i is &quot; + i); i++; &#125; while (i &lt; 5); &#125; &#125; 声明和初始化数组你可以使用以下两种方式声明和初始化数组： 1. 声明数组java 复制代码 int[] myArray; // 声明一个整型数组 2. 初始化数组java 复制代码 myArray = new int[5]; // 创建一个长度为5的整型数组 或者可以直接同时声明和初始化数组： java 复制代码 int[] myArray = new int[5]; // 声明并创建一个长度为5的整型数组 你也可以直接给数组赋值： java 复制代码 int[] myArray = &#123;1, 2, 3, 4, 5&#125;; // 声明并初始化数组，包含5个元素 访问数组元素数组中的每个元素都有一个索引，从0开始。 示例java 复制代码 public class ArrayExample &#123; public static void main(String[] args) &#123; int[] myArray = &#123;1, 2, 3, 4, 5&#125;; // 访问第一个元素 System.out.println(myArray[0]); // 输出：1 // 访问第三个元素 System.out.println(myArray[2]); // 输出：3 // 修改数组中的元素 myArray[2] = 10; System.out.println(myArray[2]); // 输出：10 &#125; &#125; 数组的长度你可以使用数组的 length 属性获取数组的长度。 示例java 复制代码 public class ArrayLengthExample &#123; public static void main(String[] args) &#123; int[] myArray = &#123;1, 2, 3, 4, 5&#125;; System.out.println(&quot;Array length: &quot; +&lt;mark&gt; myArray&lt;/mark&gt;.length); // 输出：Array length: 5 &#125; &#125; 遍历数组你可以使用循环来遍历数组中的每个元素。 使用 for 循环java 复制代码 public class ArrayLoopExample &#123; public static void main(String[] args) &#123; int[] myArray = &#123;1, 2, 3, 4, 5&#125;; for (int i = 0; i &lt; myArray.length; i++) &#123; System.out.println(&quot;Element at index &quot; + i + &quot;: &quot; + myArray[i]); &#125; &#125; &#125; 使用增强的 for 循环（for-each 循环）java 复制代码 public class EnhancedForLoopExample &#123; public static void main(String[] args) &#123; int[] myArray = &#123;1, 2, 3, 4, 5&#125;; for (int element : myArray) &#123; System.out.println(&quot;Element: &quot; + element); &#125; &#125; &#125;","tags":["学习"]},{"title":"经济","path":"/2024/07/05/经济/","content":"萨伊定律 目前已经被淘汰 劳动市场论、利息论、旧货币数量论 社会的总供给必定会等于总需求。因为资本累积全部最后会转化为消费与投资，生产必因资本的全部投入而扩大了劳动就业，因此不论供给多寡并不会导致需求不足的情形，为了容易达到充分就业，因而供给必得以尽可能增大。 此定律被提出来的时间点是在工业革命之后，在一个完全卖方主导的市场，这种情境下萨伊定律是成立的。因为产品总是用产品（货币）来购买，买者同时也就是卖者，买卖是完全一致的。因此，“商品的供给会为自己创造出需求，总供给与总需求必定是相等的”。局部供求不一致也会因自由价格机制的调节而达到均衡[2]。 供给创造自己的需求 是对萨伊定律最常见的表达形式[4]。这定义暗示了“所有商品生产以后，一定能够销售”这种思想。但詹姆斯·穆勒本人对此的解释是：“生产，分配，交换只是手段。谁也不为生产而生产。所有这一切都是中间，中介的活动。生产的目的是为了消费。 古典学派的代表人物李嘉图指出：“任何人从事生产都是为了消费或销售行为；销售则是为了让消费者购买直接有用或是有益于未来生产的某种其他商品。所以一个人从事生产时，他要不是成为自己商品的消费者，就必然会成为他人商品的购买者和消费者。” 劳动市场论的支持庇古教授认为除了一般的摩擦性失业和一般自愿失业者外，整个资本主义社会应该会达到充分就业。根据萨伊定律，总需求的价格等于总供给的价格[8]，社会的商品并不会出现生产过剩，那么总产量和边际生产率（马歇尔创造的概念）将达到最高水平，工人的工资相等于劳动的负效用（马歇尔创造的另一个概念），除非工人不满意现有工资水平，否则社会不可能出现失业[9]。古典学派将上述现象归入自愿失业，以维持萨伊定律所依据的是非自愿失业。所以庇古教授提出解决失业的方法就是工人自愿降低货币工资，从而令劳动市场的供给和需求达致均衡，并且反对工会制定过高的工资水平[10]。 利息论的支持","tags":["经济"]},{"title":"学习","path":"/2024/06/30/学习/","content":"kali的安全评估讲求一个顺序 ● 范围界定； ● 测试对象是什么？ ● 应当采取何种测试方法？ ● 有哪些在测试过程中需要满足的条件？ ● 哪些因素可能会限制测试执行的过程？ ● 需要多久才能完成测试？ ● 此次测试应当达成什么任务目标？ ● 信息收集； ● 测试对象是什么？ ● 应当采取何种测试方法？ ● 有哪些在测试过程中需要满足的条件？ ● 哪些因素可能会限制测试执行的过程？ ● 需要多久才能完成测试？ ● 此次测试应当达成什么任务目标？ ● 目标识别； 这个阶段的主要任务是识别目标的网络状态、操作系统和网络架构。该阶段工作旨在完整地展现目标网络里各种联网设备或技术的完整关系，以帮助测试人员在接下来的工作里枚举目标网络的各种服务。Kali Linux 提供的一系列先进的网络工具，可以轻松探测到联网主机，识别这些主机运行的操作系统，并根据每个设备在网络系统中的不同角色对它们进行归类。这些工具通常采用了基于上层网络协议的主动和被动的检测技术。它们能够通过不同的方式巧妙地利用各种协议获取许多有用的信息，比如操作系统指纹等。 ● 服务枚举； 这一阶段会根据前面各个阶段的成果，进一步找出目标系统中所有开放的端口。一旦找到了所有开放的端口，就可以通过这些端口来列出目标系统上运行的服务。有很多扫描端口的技术，如全开（full-open）扫描、半开（half-open）扫描、隐蔽式（stealth）扫描等。这些技术都可用来检测端口的开放情况，甚至可以扫描处于防火墙或者入侵检测系统保护下的主机。主机上开放的端口都有相应的服务程序，对这些信息进行深度分析之后，可进一步发掘目标网络基础设施中可能存在的漏洞。因此，这个阶段为其后的测试工作打下了基础，有助于测试人员继而发现各种网络设备上可能会造成严重危害的安全漏洞。Kali Linux收录的部分自动化工具可以辅助审计人员完成这一阶段的目标。 ● 漏洞映射； 至此为止，我们已经充分收集了目标网络的各种信息。接下来，我们就可以根据已经发现的开放端口和服务程序，查找、分析目标系统中存在的漏洞。Kali Linux 系统中提供的一系列自动化的网络和应用漏洞评估工具可以担任完成这个阶段的任务。当然，人工（手动）完成这些任务未尝不可，只是人工操作极为耗时，而且需要有关人员拥有专家级的知识。但是，如果能够将自动和手动这两种不同的测试方法结合起来，审计人员对目标系统的认知就会更为清晰、透彻，并能够仔细地检查任何已知和未知的漏洞。否则，被遗漏的漏洞将会一直残留在目标网络系统里。 ● 社会工程学； 如果目标网络没有直接的入口，欺骗的艺术将起到抛砖引玉的重要作用。对目标组织中的人员进行定向攻击，很有可能帮助我们找到渗透目标系统的入口。例如，诱使用户运行会安装后门的恶意程序，就可能为审计人员的渗透工作形成突破。社会工程学渗透分为多种不同实现形式。伪装成网络管理员，通过电话要求用户提供自己的账户信息；发送钓鱼邮件来劫持用户的银行账户；甚至是诱使某人出现在某个地点——这些都属于社会工程学攻击。在社会工程学中，达成同一既定目标的实现方式应有尽有。需要注意的是，在对目标实施欺骗以达成渗透目标之前，多数情况下需要长时间研究目标人员的心理。另外，在开展这个阶段的工作之前，您需要事先研究国内的法律是否有关于社会工程学的相关条款。 ● 漏洞利用； 在仔细检查和发现目标系统中的漏洞之后，就可以使用已有的漏洞利用程序对目标系统进行渗透。某些情况下不得不对漏洞利用程序（exploit）进行额外的研究和修改，否则它可能就无法正常工作。虽然这听起来就很麻烦，但是先进的漏洞利用（修改）工具可使这项工作容易得多，而且Kali Linux 已经收录了这种工具。此外，审计人员可以把客户端漏洞利用程序和社会工程学进行结合，进而控制目标系统。这个阶段的主要任务是控制目标系统。整个流程可以分为3步，涉及攻击前、攻击、攻击后的相关行动。 ● 提升权限； 获取目标系统的控制权是渗透成功的标志。接下来，审计人员就可以依据其所拥有的访问权限，在被测系统中自由发挥。审计人员也可以使用适用于目标系统的本地漏洞来提升自己的权限。只要他们能够在目标系统上运行提权漏洞利用程序，就可以获得主机上的超级用户权限或者系统级权限。审计人员还可以以该主机为跳板，进一步攻击局域网络。根据之前对渗透范围的界定，审计人员接下来会开展的攻击可能是受限制的，也可能是不受限的。而后，他们很有可能以各种方式获得与被控制系统有关的更多信息。具体的说，他们可能使用嗅探手段截获网络数据包，破解各种服务的密码，在局域网络中使用网络欺骗手段。所以说，提升权限的最终目的是获得目标系统的最高访问权限。 ● 访问维护； 多数情况下，审计人员需要在一段时间内维护他们对目标系统的访问权限。例如，在演示越权访问目标系统的时候，安装后门将节省重新渗透目标系统所耗费的大量时间。这些情况下，访问维护将节约获取目标系统访问权限所需要的时间、花费和资源。审计人员可以通过一些秘密的通信隧道，在既定时间内维持对目标的访问权限。这些隧道往往基于特定协议、代理或者点对点通信方法的后门程序。这种对系统的访问方法可以清楚地展示，入侵人员在目标系统实施攻击时隐匿行踪的具体方法。","tags":["学习"]},{"title":"学习1","path":"/2024/06/30/学习1/","content":"kali的常用工具● 信息收集：这类工具可用来收集目标的 DNS、IDS&#x2F;IPS、网络扫描、操作系统、路由、SSL、SMB、VPN、VoIP、SNMP信息和E-mail地址。 ● 漏洞评估：这类工具都可以扫描目标系统上的漏洞。部分工具可以检测Cisco 网络系统缺陷，有些还可以评估各种数据库系统的安全问题。很多模糊测试软件都属于漏洞评估工具。 ● Web应用：即与Web应用有关的工具。它包括CMS（内容管理系统）扫描器、数据库漏洞利用程序、Web应用模糊测试、Web应用代理、Web爬虫及Web漏洞扫描器。 ● 密码攻击：无论是在线攻击还是离线破解，只要是能够实施密码攻击的工具都属于密码攻击类工具。 ● 漏洞利用：这类工具可以利用在目标系统中发现的漏洞。攻击网络、Web 和数据库漏洞的软件，都属于漏洞利用（exploitation）工具。Kali 中的某些软件可以针对漏洞情况进行社会工程学攻击。 ● 网络监听：这类工具用于监听网络和Web 流量。网络监听需要进行网络欺骗，所以Ettercap和Yersinia这类软件也归于这类软件。 ● 访问维护：这类工具帮助渗透人员维持他们对目标主机的访问权。某些情况下，渗透人员必须先获取主机的最高权限才能安装这类软件。这类软件包括用于在 Web应用和操作系统安装后门的程序，以及隧道类工具。 ● 报告工具：如果您需要撰写渗透测试的报告文件，您应该用得上这些软件。 ● 系统服务：这是渗透人员在渗透测试时可能用到的常见服务类软件，它包括Apache服务、MySQL服务、SSH服务和Metasploit服务。 ● 信息收集：这类工具可用来收集目标的 DNS、IDS&#x2F;IPS、网络扫描、操作系统、路由、SSL、SMB、VPN、VoIP、SNMP信息和E-mail地址。 ● 漏洞评估：这类工具都可以扫描目标系统上的漏洞。部分工具可以检测Cisco 网络系统缺陷，有些还可以评估各种数据库系统的安全问题。很多模糊测试软件都属于漏洞评估工具。 ● Web应用：即与Web应用有关的工具。它包括CMS（内容管理系统）扫描器、数据库漏洞利用程序、Web应用模糊测试、Web应用代理、Web爬虫及Web漏洞扫描器。 ● 密码攻击：无论是在线攻击还是离线破解，只要是能够实施密码攻击的工具都属于密码攻击类工具。 ● 漏洞利用：这类工具可以利用在目标系统中发现的漏洞。攻击网络、Web 和数据库漏洞的软件，都属于漏洞利用（exploitation）工具。Kali 中的某些软件可以针对漏洞情况进行社会工程学攻击。 ● 网络监听：这类工具用于监听网络和Web 流量。网络监听需要进行网络欺骗，所以Ettercap和Yersinia这类软件也归于这类软件。 ● 访问维护：这类工具帮助渗透人员维持他们对目标主机的访问权。某些情况下，渗透人员必须先获取主机的最高权限才能安装这类软件。这类软件包括用于在 Web应用和操作系统安装后门的程序，以及隧道类工具。 ● 报告工具：如果您需要撰写渗透测试的报告文件，您应该用得上这些软件。 ● 系统服务：这是渗透人员在渗透测试时可能用到的常见服务类软件，它包括Apache服务、MySQL服务、SSH服务和Metasploit服务。 kali使用时所需要的一些命令首先是文件夹方面 cd ..返回上一级目录 ..就代表一级目录 如返回上两级目录 cd ..&#x2F;..cd 返回主目录cd &#x2F; 从根目录开始 若不加“&#x2F;”则表示从当前路径开始cd ~user 进入个人主目录cd - 返回上次操作目录pwd 显示工作路径ls 查看目录中的文件ls -F 查看目录中的文件ls -l 显示文件和目录的详细资料ls -a 显示隐藏文件ls [0-9] 显示包含数字的文件名和目录名tree 显示文件和目录由根目录开始的树形结构（1）lstree 显卡文件和目录由根目录开始的树形结构（2）mkdir dir1 创建一个叫做‘dir1’的目录’mkdir dir1 dir2 同时创建两个目录mkdir dir1&#x2F;dir2 创建一个目录树rm -f file1 删除一个叫‘file1’的文件rmdir dir1 删除一个叫‘dir1’的目录rm -rf dir1 删除一个叫‘dir1’的目录并同时删除其内容rm -rf dir1 dir2 同时删除两个目录及它们的内容mv dir1 new_dir 重命名&#x2F;移动一个目录cp file1 file2 复制一个文件cp dir&#x2F;*. 复制一个目录下的所有文件到当前工作目录cp -a tmpdir1. 复制一个目录到当前工作目录cp -a tmpdir2 复制一个目录ln -s file1 lnk1 创建一个指向文件或目录的软链接ln file1 lnk1 创建一个指向文件或目录的物理链接 查看系统下相关信息1.arch 显示机器的处理架构 2.dmidecode -q 显示BIOS基本信息 3.cat &#x2F;proc&#x2F;cpuinfo 查看CPU基本信息 4.cat &#x2F;proc&#x2F;interrupts 查看系统中断 5.cat &#x2F;proc&#x2F;meminfo 校验内存使用 #&#x2F;proc里 6.&#x2F;proc 文件系统是一种内核和内核模块用来向进程(process) 发送信息的机制(所以叫做&#x2F;proc)。 可通过 ls &#x2F;proc查看具体内容 不一一介绍7.lspci -tv 罗列PCI设备 8.lsusb -tv 显示USB设备 9.date 显示系统时间10.cal 2010 显示2010年日历11.clock -w 将时间修改保存到 BIOS12.shutdown -h now 立即关机13.shutdown -h 20:25 制定时间关机 用shutdown -c来返回14.shutdown -r 重启15.init 0 关闭系统16.telnet 0 关闭系统17.reboot重启18.logout注销0x03 文件搜索find -name file1 从‘’开始进入根文件系统搜索文件和目录find &#x2F;-user user1 搜索属于用户‘user1’的文件和目录find homeuser1 -name *.bin 在目录‘homiuser1’中搜索带有‘bin’结尾的文件find usrbin -type f -atime +100 搜索在过去100天内未被使用过的执行文件find usrbin -type f -mtime -10 搜索在10天内被创建或者修改过的文件find &#x2F;-name *.rpm -exec chmod 755’{}’; 搜素以‘.rpm’结尾的文件并定义其权限find &#x2F;-xdev -name *.rpm 搜索以‘.rpm’结尾的文件，忽略光驱、键盘等可移动设备locate *.ps 寻找以‘.ps’结尾的文件find . -size -5k -a -size +1k -exec ls -lh {} ; find查找size 大于1k小于5k的结果集 kali特有的常用命令passwd 修改密码 passwd root 修改root用户密码 date 显示系统日期 sudo 后面加命令 就可以调用管理权限 apt-get update 更新软件列表 这个命令，会访问源列表里的每个网址，并读取软件列表，然后保存在本地电脑。我们在新立得软件包管理器里看到的软件列表，都是通过update命令更新的。 apt-get upgrade 更新软件 这个命令，会把本地已安装的软件，与刚下载的软件列表里对应软件进行对比，如果发现已安装的软件版本太低，就会提示你更新。如果你的软件都是最新版本，会提示： 升级了 0 个软件包，新安装了 0 个软件包，要卸载 0 个软件包，有 0 个软件包未被升级。 apt-get dist-upgrade 更新软件 apt-get upgrade 与 apt-get dist-upgrade 的区别 upgrade:系统将现有的Package升级,如果有相依性的问题,而此相依性需要安装其它新的Package或影响到其它Package的相依性时,此Package就不会被升级,会保留下来. dist-upgrade:可以聪明的解决相依性的问题,如果有相依性问题,需要安装&#x2F;移除新的Package,就会试着去安装&#x2F;移除它. (所以通常这个会被认为是有点风险的升级) apt-get upgrade 和 apt-get dist-upgrade 本质上是没有什么不同的。 只不过，dist-upgrade 会识别出当依赖关系改变的情形并作出处理，而upgrade对此情形不处理。 例如软件包 a 原先依赖 b c d，但是在源里面可能已经升级了，现在是 a 依赖 b c e。这种情况下，dist-upgrade 会删除 d 安装 e，并把 a 软件包升级，而 upgrade 会认为依赖关系改变而拒绝升级 a 软件包。 clear 清屏 sudo gpedit 特权调用gpedit编辑器 reboot 重启 apt-get install XXXXX 安装缺少的依赖包，（XXX）里面输入缺少依赖包的名字 apt-get autoremove –purge 软件名 删除包及其依赖的软件包+配置文件等 apt-get install +模块名 这种方法也可以安装模块,或者apt-get install python-模块名 firefox 浏览器打开 shutdown -h now 关闭系统(1) init 0 关闭系统(2) telinit 0 关闭系统(3) shutdown -h hours:minutes &amp; 按预定时间关闭系统 shutdown -c 取消按预定时间关闭系统 shutdown -r now 重启(1) reboot 重启(2) su -l 切换登陆用户 logout 注销用户登陆 pwd 当前路径 vi 常用命令1.命令模式（command mode） 控制屏幕光标的移动，字符、字或行的删除，移动复制某区段及进入Insert mode下，或者到 last line mode。 2.插入模式（Insert mode） 只有在Insert mode下，才可以做文字输入，按「ESC」键可回到命令行模式。 3.底行模式（last line mode） 将文件保存或退出vi，也可以设置编辑环境，如寻找字符串、列出行号……等。 打开 vi filename :打开或新建文件，并将光标置于第一行首 vi +n filename ：打开文件，并将光标置于第n行首 vi + filename ：打开文件，并将光标置于最后一行首 编辑 i 在当前位置生前插入 I 在当前行首插入 a 在当前位置后插入 A 在当前行尾插入 o 在当前行之后插入一行 O 在当前行之前插入一行 编辑结束，按Esc返回命令模式 基本查找 &#x2F;text 查找text，按n健查找下一个，按N健查找前一个。 ?text 查找text，反向查找，按n健查找下一个，按N健查找前一个。 查找很长的词，如果一个词很长，键入麻烦，可以将光标移动到该词上，按*或#键即可以该单词进行搜索，相当于&#x2F;搜索。而#命令相当于?搜索。 删除 删除当前行 dd 删除2行 2dd 拷贝和粘贴 yy 拷贝当前行 nyy 拷贝当前后开始的n行，比如2yy拷贝当前行及其下一行。 p 在当前光标后粘贴 区块拷贝 将光标移动到要复制的文本开始的地方，按 v进入可视模式。将光标移动到要复制的文本的结束的地方，按y复制。此时vim会自动将光标定位到选中文本的开始的地方，并退出可视模式。我移动光标到文本结束的地方，按 p粘贴。退出命令 :wq 保存并退出 :q! 强制退出并忽略所有更改 :e! 放弃所有修改，并打开原来文件 :w保存修改 显示行号 set number set nu 输入:n，代表跳转到第n行，如:100，就跳转到第100行。 撤销操作 u vim与vi的区别 vim是vi的延申 vim编辑源码会高亮 vim的命令对vi是完全兼容的 搜索find &#x2F; -name file1 从 ‘&#x2F;’ 开始进入根文件系统搜索文件和目录 find &#x2F; -user user1 搜索属于用户 ‘user1’ 的文件和目录 find &#x2F;home&#x2F;user1 -name *.bin 在目录 ‘&#x2F; home&#x2F;user1’ 中搜索带有’.bin’ 结尾的文件 find &#x2F;usr&#x2F;bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件 find &#x2F;usr&#x2F;bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件 find . -name ‘*.php’ -mmin -30 查找最近30分钟修改的当前目录下的.php文件 find . -name ‘*.php’ -mtime 0 查找最近24小时修改的当前目录下的.php文件 find . -name ‘*.inc’ -mtime 0 -ls 查找最近24小时修改的当前目录下的.php文件，并列出详细信息 find . -type f -mtime 1 查找当前目录下，最近24-48小时修改过的常规文件。 find . -type f -mtime +1 查找当前目录下，最近1天前修改过的常规文件。 -atime 文件访问时间 -ctime 文件常见时间 -mtime文件修改时间 -mtime n : n为数字，意思为在n天之前的“一天之内”被更改过内容的文件 -mtime +n : 列出在n天之前（不含n天本身）被更改过内容的文件名 -mtime -n : 列出在n天之内（含n天本身）被更改过内容的文件名 -type f 代表一个普通格式的文件 二进制文件 -type d 代表文件夹 find &#x2F; -name *.rpm -exec chmod 755 ‘{}’ ; 搜索以 ‘.rpm’ 结尾的文件并定义其权限 find &#x2F; -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备 locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令 whereis halt 显示一个二进制文件、源码或man的位置 which halt 显示一个二进制文件或可执行文件的完整路径 grep kali &#x2F;etc&#x2F;passwd grep关键词搜索 find &#x2F; -name moonsec 2&gt;&#x2F;dev&#x2F;null 搜索某个文件&#x2F;文件夹 屏蔽出错信息 用户和群组groupadd group_name 创建一个新用户组 groupdel group_name 删除一个用户组 cat &#x2F;etc&#x2F;group | grep group_name usermod -a -G moontea k1把用户k1附加其他用户组 创建目录 useradd moonsec passwd moonsec 创建用户以及分配目录 useradd -r -m -s &#x2F;bin&#x2F;bash moonsec 参数的意思： -r 建立系统账号 -m 自动建立用户的登入目录 -s &#x2F;bin&#x2F;bash 指定用户登入后所使用的shell 切换用户 su - root 切换到root用户 su 用户名 切换到普通用户 linux常用网络命令网络和监控命令类似于这些： hostname, ping, ifconfig, iwconfig, netstat, nslookup, traceroute, finger, telnet, ethtool 用于查看 linux 服务器 ip 地址，管理服务器网络配置，通过 telnet 和 ethernet 建立与 linux 之间的网络链接，查看 linux 的服务器信息等。下面让我们看看在 Linux 下的网络和监控命令的使用。 hostname 查看本机名 ping 一般用于测试网络是否通 内网icmp ping www.baidu.com -c 3 执行3次 ifconfig 网卡信息 iwconfig 用于配置或获取无线网络设备信息 netstat -a (all)显示所有选项，默认不显示LISTEN相关 -t (tcp)仅显示tcp相关选项 -u (udp)仅显示udp相关选项 -n 拒绝显示别名，能显示数字的全部转化成数字。 -l 仅列出有在 Listen (监听) 的服務状态 -p 显示建立相关链接的程序名 -r 显示路由信息，路由表 -e 显示扩展信息，例如uid等 -s 按各个协议进行统计 -c 每隔一个固定时间，执行该netstat命令。 提示：LISTEN和LISTENING的状态只有用-a或者-l才能看到 常用命令 netstat -ano -an 查看当前所有已连接端口 -nlpt 查看当前所有tcp端口 -nlpu 查看当前所有udp端口 -nlpt | grep 80 查看所有80端口使用情况 netstat -lntup 查看所有的tcp和upd端口 nslookup 查询其他记录 直接查询返回的是A记录，我们可以指定参数，查询其他记录，比如AAAA、MX等。 nslookup -qt&#x3D;type domain [dns-server] 其中，type可以是以下这些类型： A 地址记录 AAAA 地址记录 AFSDB Andrew文件系统数据库服务器记录 ATMA ATM地址记录 CNAME 别名记录 HINFO 硬件配置记录，包括CPU、操作系统信息 ISDN 域名对应的ISDN号码 MB 存放指定邮箱的服务器 MG 邮件组记录 MINFO 邮件组和邮箱的信息记录 MR 改名的邮箱记录 MX 邮件服务器记录 NS 名字服务器记录 PTR 反向记录 RP 负责人记录 RT 路由穿透记录 SRV TCP服务器信息记录 TXT 域名对应的文本信息 X25 域名对应的X.25地址记录 http协议 curl wget traceroute traceroute是用来检测发出数据包的主机到目标主机之间所经过的网关数量的工具。traceroute的原理是试图以最小的TTL（存活时间）发出探测包来跟踪数据包到达目标主机所经过的网关，然后监听一个来自网关ICMP的应答。发送数据包的大小默认为38个字节。 -d 使用Socket层级的排错功能。 -f 设置第一个检测数据包的存活数值TTL的大小。 -F 设置勿离断位。 -g 设置来源路由网关，最多可设置8个。 -i 使用指定的网络界面送出数据包。 -I 使用ICMP回应取代UDP资料信息。 -m 设置检测数据包的最大存活数值TTL的大小。 -n 直接使用IP地址而非主机名称。 -p 设置UDP传输协议的通信端口。 -r 忽略普通的Routing Table，直接将数据包送到远端主机上。 -s 设置本地主机送出数据包的IP地址。 -t 设置检测数据包的TOS数值。 -v 详细显示指令的执行过程。 -w 设置等待远端主机回报的时间。 -x 开启或关闭数据包的正确性检验。 telnet Linux telnet命令用于远端登入。 执行telnet指令开启终端机阶段作业，并登入远端主机。 现在多数用于检测某个端口是否开放 Finger Finger是一种用户信息分享服务。它工作在TCP 79端口，可以用来公开用户的特定信息。Nmap的finger的脚本可以向Finger服务器发送请求，查询并获取用户的相关信息，如登录名、用户名、TTY类型、登录时间等。 ethtool 是用于查询及设置网卡参数的命令"},{"title":"大众心理学","path":"/2024/06/28/大众心理学/","content":"大众心理学 在本书的前三章，主要讲了群体的定义，群体的性质等对于群体一般特征的介绍，这些很有必要阅读，不过已经有人对此做出了总结，我这里奉上链接(《乌合之众》 -群体的一般特征)，我认为本书最重要的是讲群体的缺陷，它可以解释历史上很多群体运动和政治运动，与此书类似的还有《狂热知识分子，群众运动的圣经》下载链接 书中说到群体中的每一个人只是把他们共同分享的普通品质集中在一起并最终表现出来的智力低下与平庸这里的第一点原因就是：但是当群体中的每一个人处于孤零零的单独个体的时候，后天的教育与内心的良知都在对他起着约束作用，他知道自己必须要对自己的这种本能行为加以控制。但是，群体的力量却让人们解脱了这些约束与羁绊——无论是后天教育养成的还是先天的良知所意识到的——他没有什么理由再约束自己，更无法控制内心中的放纵与不羁第二点原因是：群体情绪的相互传染——对群体的特点形成起着决定性的作用，决定着群体行为选择的倾向。 一个被群体情绪传染的人会感觉到自己前所未有的强大，他的行动完全听凭另一种陌生的力量所主宰。这时候他的心中笼罩着的是一种悲怆的感情，这种感情会让他表现得完全像另外一个人。 被传染了的群体以他们那完全非理性的力量主宰着这个世界，他们尽可以为所欲为，直到他们在行动中的群体不断分化并消散，这种极端情绪也告消失。 个人的人格是如此的脆弱，他随时都会被带入到一种完全失去任何意识的状态。于是他就会对导致自己丧失了人格意识的暗示力量惟命是从，会做出一些与他的性格习惯极为矛盾的举动。群体有着自动放大非理性冲动的能力——暗示的作用对于群体中的每一个人都会起到相同的作用。这种作用随着群体的情绪链条的传递，会越来越强大，直到突破人的思想想象，仍然不会停止下来。 群体只接受暗示力量的影响。如果有谁想让群体冷静下来，或是改弦易辙，那就只有使用不同的暗示。 是自我人格消失； 是无意识人格起到决定性的作用； 是情感与思想在暗示与传染的作用下转向一个方向 是暗示的观念具有即刻转化为行动的冲动。 由此作者得出： 在这种情况下，一个有着明确的身份与性格的个人已经消失了，他融入到群体中，成为了一个再也不受自己意志控制与支配的玩偶。 群体中的人做事时有着明确的目标，但是他们却不知道自己在做什么。 这就好像是活动的生物知道自己在做什么，但构成这些行为本身的生物细胞却肯定不知道自己在做些什么。 对于一个完全不知道自己正在做什么的人来说，这时候他的智力显然是靠不住的，多半是已经下降到了界限的阀值之下。 理性的人所抱有的是持续性的怀疑精神与思想的独立意识。但是任何一个群体更像是一个原始人的乌合之众！拥有独立意识的怀疑论者，在群体中会成为最为虔诚的信徒，甚至容不得一丝一毫的怀疑。拥有独立意识时的老实人，在群体中会表现得蔑视法律、我行我素。拥有独立意识时的胆小鬼，在群体中会变成一个胆大包天、肆意妄为的人。 总结一下 在智力上，群体的表现远不如构成这一群体之中的个人，所以在涉及到智慧这方面上，我们是绝不能依赖于群体的。 群体比个人更有力量，但是群体的表现是极不稳定的；而个人无论是智力还是能力方面，总是维持在一个平均的水平线上的。 群体的行动是受感情激起并主导的，这种感情的强弱程度，直接决定着群体的行为能力。 群体的表现有可能比个体更好，或者更差。究竟群体会表现得更好还是更差，这完全取决于周边的环境如何。 群体能够干出什么来，取决于影响群体的暗示具有何种性质。如果这种性质是积极的、进步的、有意义的，那么群体的表现就会是相应的积极进步而有益。反之，如果主宰群体行为的暗示是负面的心理能量，那么群体的表现就会非常可怕——如果把群体比作是同一个人，那么这种主宰群体行为的暗示力量就好比是人的思想，如果这个人的思想是善良的，那么这个人必然是善良的，反之亦然。 体往往会构成骚乱的因由，但群体更多的表现，却是一个英雄主义的群体。 以上信息来自于本书的第一章","tags":["读书"]},{"title":"bilibili","path":"/2024/06/26/《沉思录》/","content":"短视频平台——流量走向何处？ 短视频平台之间不仅存在零和博弈，各个主播之间也存在博弈，其中，为了博得观众的欢心，他们可以通过很多种手段，其中一种手段便是一个良好的推送机制，只有这样，才能留住用户，带来收益，抖音快手平台，推送权重以两秒完播率，五秒完播率为主，与哔哩哔哩不同，哔哩哔哩是计算整体的完播率 为何抖音快手注重两秒完播率与五秒完播率呢，这与短视频平台的受众群体与平台视频的推送界面有关。快手抖音推送方式以刷视频为主，在推送到下一个视频的时候，不能像B站用户一样先看标题，再决定选择的视频，抖音快手观众往往都无法通过标题确定视频的具体内容，那么他们便会通过视频的开头确定，为了判断这条视频是否和你的兴趣相符合，那么视频便应当在最短的时间内给观众带来丰富的视觉体验，来完整的传达出内容。丰富的视觉体验便是夸张的剧情，搞笑的段子，猎奇的声音等等，这才能顺理成章的引出你的内容，这便可以解答，暴叔讲留学为何播放率如此之高，猫一杯为何爆火。一个尖锐的笑声，一个夸张的美颜等等等等，总结下来，不同的投送界面决定了平台以什么推送机制为标准，不同的推送机制，决定了不同品态吸引观众眼球的方式，受众群体方面，快手抖音和B站大有不同，抖音快手相对年龄较大，短时长的内容也导致理解的深度不够，他们更喜欢碎片化的信息，这也导致他们的理解深度不同，不同理解的深度同样影响了短视频的受众群体。也就决定了博的眼球的方式 这两个平台比较起来还有很多不同点，这仅仅是写作业途中略微的思考……….","tags":["科普","知识"]},{"title":"网站SEO","path":"/2024/06/25/网站SEO-md/","content":"关于论坛SEO关键词优化的一个研究 中文关键词密度计算。 也叫做关键词频率，根据我所查阅的相关文章，搜索引擎对于中文关键词的计算分为两步：第一是关键词切分，第二是关键词密度计算，我这里举个例子；如我为网站设计了一个三级关键词，叫做‘’我的笔记本‘’，那么搜索引擎会把它分为：我 的 笔记本 则当你搜索笔记本的时候，便会把你网站的权重降到三分之一。 关键词密度应用。 据说对于CCTV等网站，国内会把他关键词密度上升20% 不过真假不知，普通网站建议关键词密度为5%到8% 如果恶意堆叠关键词，则可能会被屏蔽，导致无法搜索，百度权重更加注重关键词密度，而谷歌更加注重外部链接建立 关键词布局 关键词的权重同样与关键词排列方式有关，也就是关键词逗号相隔间的内容顺序；同时与关键词长度有关，百度收录关键词一般在20个字以下；关键词最好最为3个，因为你强调的关键词越少，权重就越高，同个网站不要在不同页面写同一个关键词， 否则例如谷歌和百度，他只会收录一个网站 长尾关键词 较长的，搜索次数小的，就是长尾关键词，它可以确定更小范围的群体，可以降低竞争对手，但也降低了吸引用户的广度，他的适用范围更适合大网站，因为小网站没有大量页面做基础，很难在此发挥作用，做好长尾关键词需要域名权重和网站结构双重优势，如果是 ‘网易我的世界底包 ’这个关键词对于我们论坛比较吃力 我们该怎么做 首先我明确了我们的目标是我的世界的用户，我使用百度指数对此产品的用户进行了分析 很明显可以看到，我的世界的关键词是最突出的，但是他的突出程度也意味着更加激烈的竞争，很显然行不通，我们不妨降几级，使用我的世界网易版为关键词 我们使用的关键词是”YuChen,YuChenBBS,YuChen底包,网易我的世界客户端”，但是平台默认所有子页面的关键词都是一个，这就导致把多个页面判定成一个，即为只收录一个主页，同时我们不妨把‘’我的世界网易版‘’关键词提前，把YuChen删除，以增加权重 其次是把文章内容进行填充，增加正文的关键词频数，措施便是鼓励长文发布者，鼓励给自己内容填充SEO标题和关键词，鼓励内容便是yc","tags":["教程","SEO","搜索"]},{"title":"添加woff2切片","path":"/2024/06/23/添加woff2切片/","content":"hexo添加woff2切片 Stellar主题当中，作者写的教程关于woff2切片加载比较模糊，我这里做一个补充说明，首先如果你导入的ttf文档比较大的时候，需要使用fonttools进行切割，这不得不使用PyCharm了，所以我们第一个步骤就是安装他 PyCharm：点我下载 安装方式不做过多赘述 破解工具：点我下载 进入到文件夹 /jetbra——将上面图示的补丁的所属文件夹 /jetbra 复制电脑某个位置，补丁所属文件夹需单独存放，且放置的路径不要有中文与空格，以免 Pycharm 读取补丁错误。——点击进入 /jetbra 补丁目录，再点击进入 /scripts 文件夹，双击执行 install-current-user.vbs 破解——重新打开 Pycharm 后，复制下面的激活码： EUWT4EE9X2-eyJsaWNlbnNlSWQiOiJFVVdUNEVFOVgyIiwibGljZW5zZWVOYW1lIjoic2lnbnVwIHNjb290ZXIiLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJQU0kiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBDIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUFBDIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQV1MiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBDV01QIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjp0cnVlfV0sIm1ldGFkYXRhIjoiMDEyMDIyMDkwMlBTQU4wMDAwMDUiLCJoYXNoIjoiVFJJQUw6MzUzOTQ0NTE3IiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-FT9l1nyyF9EyNmlelrLP9rGtugZ6sEs3CkYIKqGgSi608LIamge623nLLjI8f6O4EdbCfjJcPXLxklUe1O/5ASO3JnbPFUBYUEebCWZPgPfIdjw7hfA1PsGUdw1SBvh4BEWCMVVJWVtc9ktE+gQ8ldugYjXs0s34xaWjjfolJn2V4f4lnnCv0pikF7Ig/Bsyd/8bsySBJ54Uy9dkEsBUFJzqYSfR7Z/xsrACGFgq96ZsifnAnnOvfGbRX8Q8IIu0zDbNh7smxOwrz2odmL72UaU51A5YaOcPSXRM9uyqCnSp/ENLzkQa/B9RNO+VA7kCsj3MlJWJp5Sotn5spyV+gA==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUlaUFc1wf+CfY9wzFWEL2euKQ5nswqb57V8QZG7d7RoR6rwYUIXseTOAFq210oMEe++LCjzKDuqwDfsyhgDNTgZBPAaC4vUU2oy+XR+Fq8nBixWIsH668HeOnRK6RRhsr0rJzRB95aZ3EAPzBuQ2qPaNGm17pAX0Rd6MPRgjp75IWwI9eA6aMEdPQEVN7uyOtM5zSsjoj79Lbu1fjShOnQZuJcsV8tqnayeFkNzv2LTOlofU/Tbx502Ro073gGjoeRzNvrynAP03pL486P3KCAyiNPhDs2z8/COMrxRlZW5mfzo0xsK0dQGNH3UoG/9RVwHG4eS8LFpMTR9oetHZBAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBABqRoNGxAQct9dQUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/we9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD 粘贴到输入框内，点击 Activate 按钮，就激活成功了。 然后下载常用文字 点我下载 把3500.txt 导入PyCharm的ProJect ，新建项目工程，在此文件夹下打开terminal 输入pip install fontTools之后可能会出现因为目录没有放入系统变量而导致的错误，会提示程序不存在，这里需要进入电脑高级设置，将path环境变量引入，如果没有报错请跳过，最后便是pyftsubset.exe 你字体名字.ttf --text-file=3500.txt注意 这里需要把你的字体文件放在和TXT同级目录之下 之后会输出ttf简化版的文件，他内存更小，但仅仅包含常用字3500个，因为是网站，太大的字体会导致加载太卡，使用10mb以上的字体属于一种避讳，有时可能因为加载不出来导致字体全白 之后便是ttf切片 这里推荐使用(在线字体分包器 )当转换出来之后，便是wooff2切片，把css文件复制出来，删除除woff2以外所有文件，导入到\\博客目录\\source\\font\\ 把分包器css中的@font-face下面的内容复制出来，导入到blog主题css下的_custom.styl当中，注意这里路径./是进入上级目录 ，是相对路径，这里的路径在source下级，例如可以把./替换成/font/你的切片.wofff2 注意，这里的切片有多个 查看你复制的内容中的font-family: &quot;FZSJ-TIANSDQSYZ&quot; FZSJ-TIANSDQSYZ便是你字体的家族名，之后进入主题文件 font-family: logo: 'system-ui, \"Microsoft Yahei\", \"Segoe UI\", -apple-system, Roboto, Ubuntu, \"Helvetica Neue\", Arial, \"WenQuanYi Micro Hei\", sans-serif' body: 'FZSJ-TIANSDQSYZ'//字体名字 code: 'Menlo, Monaco, Consolas, system-ui, \"Courier New\", monospace, sans-serif' codeblock: 'Menlo, Monaco, Consolas, system-ui, \"Courier New\", monospace, sans-serif' 例外补充一点，代码块换行要ctrl加ent 差点就要另起一段了 悲 如果无效果可尝试pubilc当中的main.css，重复上述7的步骤 之后就是cl+g+s+d了，刷新便可以看到你的hexo字体得到更改了","tags":["教程"]},{"title":"奇妙的逻辑","path":"/2024/06/04/逻辑/","content":"逻辑学本文章基于《逻辑学导论》，《神逻辑》，《有毒的逻辑》，和ctrl C，内容全为非形式谬论，书写目标读者是逻辑论证的新手，我希望读者能从中学到一些最常见的逻辑漏洞，并在实践中识别、避免它们。 诉诸结果 诉诸结果，即依据某观点若成立（或不成立）所产生的结果好坏，来判断一个观点是否正确。但一个命题导致不利的后果，并不意味着该命题是假的。同样，只因为一个命题会带来好的结果，并不能突然让它变成真的。 但我们应该记住，只有当这种论证方式被用来衡量命题的真假时，它才是错误的。若用于处理决策或政策，则并非如此。例如，由于担心对选民生活产生不利影响，政治家可能会反对加税，而这是合乎逻辑的。 稻草人谬误 是指有意地滑稽模仿他人论点，以达到攻击模仿出来的论点而非实际论点的目的。歪曲、错误引用、曲解或将对方立场过分简单化就会犯这种谬误。稻草人论点通常比实际论点更荒唐，因此是更容易被攻击的目标。这也可能诱使对手偏离最初的论点，为这个更加荒唐的论点辩护。 “诉诸无关权威”中的一个类型是“诉诸古代智慧”。一个信念仅仅因为起源古老而被认为是正确的。例如用这样的理由为风水辩护：“风水盛行于古中国，集合了古代中国人的智慧。” 诉诸无关权威 词义模糊利用了语言的歧义，在论证过程中通过改变词义来支持一个无事实根据的结论。（若一个词的含义在论证过程中始终维持不变，则被描述为“词义明确”。 词义模糊 词义模糊利用了语言的歧义，在论证过程中通过改变词义来支持一个无事实根据的结论。（若一个词的含义在论证过程中始终维持不变，则被描述为“词义明确”。） 虚假两难 虚假两难，是指给出一个由两种范畴组成的有限集合，并假设讨论范围内的一切事物都必须属于该集合。因此，若拒绝其中一个范畴，便只好接受另外一个。例如：“在狂热主义之战中，谁都不能置身事外；你若不站在我们这边，便在狂热分子那边。” 事实上，存在第三种选择：中立；第四种选择：两者都反对；甚至第五种选择：对两者都抱有同情。 乱赋因果 该项谬误在没有证据支持的情况下为一个事件假定一项原因。当事件B 紧跟着事件A 发生（或同时发生）时，这可能是巧合，也可能是由于某些未知因素时影响了A 和B。一个人不能毫无根据地由此得出事件A 导致事件B 的结论。“最近发生地震是因为我们忤逆了国王”不是一个好的推论。 诉诸恐惧 这项谬误利用了听众的恐惧，设想某命题若被接受将产生一个可怕的未来，而不是提供实证以证明接受该命题将导致一个必然的结果（这可能是恐惧的正当理由）。这种论证依靠的是花言巧语、威胁，或者彻头彻尾的谎言。例如：“请全体员工在即将到来的大选中都投票给我选定的候选人。假如另一名候选人当选，他将加税，而你们中的很多人都将失业。” 轻率归纳 当论证者从某样本得出结论，而该样本太小或是太特殊以至于缺乏代表性，这时就犯了这项谬误。例如，在大街上问了十个人对总统削减赤字计划的看法，绝不能认为这是评估了整个国家的观点。 诉诸无知 该项谬误仅仅因为没有证据证明某命题是假的，就认为它是真的。在此，证据的缺席被当作了证据不存在的证据。卡尔· 萨根给出过一个谬误的例子：“没有令人信服的证据表明UFO 从未拜访过地球，因此，UFO是存在的。”类似地，在我们知道金字塔如何建造之前，有人认为，除非被证伪，否则它们一定是由超自然的力量建造的。但实际上，“举证责任”应该总是由提出主张的人来承担。 没有真正的苏格兰人 甲对一组事物下了一般性断言，之后，乙提出证据来质疑这个断言，而甲并不改变自己的立场，或对证据进行辩驳，而是靠肆意修改组内成员资格来回避质疑，这便称为“没有真正的苏格兰人”谬误。 例如，有人可能声称，程序员是没有社交技能的生物。如果其他人否定这个论断：“约翰就是一个程序员，他可一点儿也没有社交障碍。”这可能会引起如下反应：“没错，可约翰并非一个真正的程序员。”在这里，程序员的属性是不明确的，该范畴的定义不像“波长在450～495纳米之间的电磁波”那么明确。这种模糊性使得固执己见的人可以随意修改事物的定义。 起源谬误 若仅仅因为某观点的起源就贬低或维护它，便犯了这项谬误。事实上，观点的历史以及论证者的出身对观点的正确性没有任何影响。正如T. 爱德华· 戴默所指出的：若一个人对某观点的起源抱有情绪，在评估该观点的价值时便很难忽略这些情绪。 考虑如下论证：“他当然支持那些罢工的工会工人；说到底，他们都是同一个村子的人。”这里，我们评估的不是他的观点本身是否合理；仅仅因为他碰巧和抗议者来自同一个村庄，便导致我们认为他的态度是没有价值的。另一个例子：“作为生活在二十一世纪的男女，我们不能继续持有这些青铜时代的信念。”人们不禁要问：为什么不能？我们必须抛弃所有起源于青铜时代的观念，仅仅因为它们来自那个时代吗？ 相反地，一个人也可能在积极的意义上犯下起源谬误，例如：“杰克对艺术的看法不应被质疑，他是杰出的艺术家。”在这里，用来推断的证据和前例一样不足。 罪恶关联 通过指出某个被社会妖魔化的个人或群体也认同某观点，以诋毁该观点，这被称为“罪恶关联”。 另一个观点也在某些社会里被令人作呕地重复：“我们不能让女人开车，因为那些无神论国家让他们的女人开车。”从根本上，这些例子试图证明，某群体在所有方面都坏得无可救药。即使只有一项属性与该群体一样，也会使其成为该群体的一员，从而被赋予与之相关的一切邪恶。 肯定后件 “肯定前件假言推理”是有效的形式论证之一，表现为以下形式：如果 A 则 C；A 成立；因此 C 成立。更公式化的表达为：A ⇒C, A ┠ C。其中，A 被称为前件，C 被称为后件，它们组成两个前提和一个结论。 “肯定后件”是形式谬误之一，表现为：如果A 则C；C 成立；因此A 成立。其错误在于假设：如果后件为真，则前件也必然为真，而实际上并非如此。 例如：“假设上过大学的人是成功的，而约翰是成功的，因此他一定上过大学。”显然，约翰的成功可能是学校教育的结果，但也可能是家庭教育的结果，或者源于他对克服困难的渴望。学校教育并非通往成功的唯一途径，因此不能说，一个成功的人一定接受过学校教育。 诉诸虚伪 意思是“你也一样”。这种论证通过指出某人的观点与其本人的行为或以往陈述相矛盾来反驳该观点，也就是说，用指控来回答指控，把注意力从观点本身转移到提出观点的人身上。这种特征使该项谬误成为一种特别的“人身攻击”。很显然，仅仅因为某人的立场前后不一致并不意味着他此刻的立场不正确。 滑坡谬误 滑坡论证试图证明，接受某命题将无可避免地导致一系列事件，且其中的一个或多个事件是不受欢迎的，以此来诋毁该命题。尽管这一系列事件有可能会发生（每一步变迁都有一定概率发生），但该论证假设每一步变迁都是无法避免的，却没有提供任何证据支持。该项谬误利用了观众的恐惧，并和许多其他谬误相关，如诉诸恐惧和虚假两难。 例如：“我们不该允许人们不受约束地上网。因为接下来他们就会经常光顾色情网站，用不了多久，我们社会的整个道德结构就会土崩瓦解，而我们将退化成禽兽。”很明显，这里没有提供任何证据来证明不受限的网络将导致社会道德结构瓦解，而只有毫无根据的猜想。此外，这个论证还对人们在社会中的行为做了预先假设。 诉诸潮流 该项谬误也被称为“诉诸大众”，以许多人（甚至是大多数人）均相信某命题的事实为依据，来证明该命题一定是真的。该谬误常常阻碍开创性理念被普遍接受。例如，伽利略时代的大部分人都相信，太阳和行星均围绕着地球旋转，而伽利略因支持把太阳正确放置在太阳系中心的哥白尼模型而遭到嘲笑。近一些的例子是，巴里· 马歇尔医生不得不采用极端措施，自己服用幽门螺杆菌，以说服科学界它可能引发胃溃疡，而该理论此前被广泛无视。 广告经常使用这个方法来引诱人们仅仅因为流行而接受某物。例如：“大家都在使用这款发胶，千万别错过！”政客们也会利用类似的花言巧语来为他们的竞选增强动力，影响选民。 人身攻击 人身攻击谬误来自拉丁语 ad hominem，意为“针对人”。通过攻击一个人本身，而不是攻击其论点，以转移讨论话题，最终达到诋毁其论点的目的。例如：“你又不是历史学家，干吗不待在你自己的地盘？”某人不是历史学家的事实对其论点的价值没有影响（我们不能说历史学家以外的任何人对该领域的观点就自动是错的），因此它对强化攻击者的立场没有用处。 这种类型的人身攻击被称为“侮辱性人身攻击”。还有一种叫“处境类人身攻击”，即，用愤世嫉俗的眼光去攻击论证人，通常，是对他们的动机作出评判。例如： “你又不是真正关心降低城市犯罪率；你只是想要人们投票给你。”即使某人将因他人接受其论点而受益，这也并不意味着他一定是错的。 人身攻击有时也通过“你也一样”的指责来成功转移话题。例如，约翰说：“这家伙肯定是错的，因为他没有诚信，只管问问他上一次为什么被解雇。”杰克则说：“那你上次私吞奖金的事又怎么说？”由此，讨论完全偏离了轨道。但即便如此，在某些情形下依然可以正当地质疑一个人的信誉，例如在审判过程中。 循环论证 循环论证是乞词魔术的四种类型之一，待证明的结论被含蓄或明白地置入了一个或多个前提中。在循环论证中，结论有时公然被用作前提，但更经常的是，它被改写成一个似乎不一样的命题。例如：“你完全错了，因为你说得没有道理。”这里的两个命题其实是同一个命题，因为“错”和“没有道理”在此语境下是同一个意思。这个论证仅仅是在陈述：“因为X，所以X”，而这是毫无意义的。 循环论证有时依靠的是隐含前提，这使得它更难被发现。有人告诉一个无神论者，他应该信上帝，否则他会下地狱。在这里，“下地狱”背后隐含的前提是：存在着一个上帝送他去那儿。因此，前提“存在着上帝把不信的人送去地狱”被用来支持结论“上帝是存在的”。正如喜剧演员乔什·托马斯在澳大利亚电视剧《请喜欢我》中告诉佩格的：“你不能用地狱威胁一个无神论者，佩格。这不合情理。” 合成谬误与分解谬误 若从所有局部都拥有某属性就推断出总体也一定具有该属性，便犯了合成谬误。正如彼得· 米利肯所说：羊群里的每只羊都有一个妈妈，但我们不能由此推断出整个羊群有一个妈妈。另一个例子：“该软件系统的每个模块均已通过了一系列单元测试，因此，将模块整合后，该系统不会违反任何被那些单元测试所验证的不变量。”事实上，把单独的部分整合成一个系统后，由于各部分之间的互动，会产生新层次的复杂性，从而导致新的出错方式。 与之对立，分解谬误是：只因总体拥有某属性，便推断某局部也一定拥有该属性。例如：“我们队所向披靡。因此，我们的任何一名队员都能够单挑并赢过另一队的任何一名球员。”该队作为一个整体时所向披靡也许是真的，但那很可能是球员个人技术合作的结果，因此并不能作为每个球员本身均无敌的证据。","tags":["读书"]}]